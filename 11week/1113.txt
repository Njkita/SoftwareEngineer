Сформулируйте принципы работы и сложность для всех алгоритмов сортировки из стандартной библиотеки.

1. std::sort - гибридная сортировка: в основе quicksort, переключается на heapsort при глубокой рекурсии,
а для малых подмассивов использует сортировку вставками. Сложность: O(NlogN)

2. std::stable_sort - сортировка через merge sort, для малых подмассивов использует сортировку вставками.
Сложность: O(N·logN) или O(N·log²N)

3. std::partial_sort - сортировка через одну из вариаций heapsort (строит кучу для первых k элементов, проходит
по остальным, поддерживая кучу). Сложность: O(N·logK), где K - количество сортируемых элементов

4. std::nth_element - сортировка через одну из вариаций quickselect (рекурсивно разделяет массив вокруг
опорного элемента - n-й элемент на своем месте, остальные не отсортированы). Сложность: O(N) в среднем,
O(N²) в худшем случае.

5. std::sort_heap - последовательно извлекает максимумы за O(N·logN) из построенной за O(N) бинарной кучи
с помощью make_heap. Сложность: O(N·logN) 

6. std::inplace_merge - сливает две отсортированные последовательности на месте. Сложность: O(N) с дополнительной
памятью, O(N·logN) без нее