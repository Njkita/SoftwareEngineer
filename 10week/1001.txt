Сформулируйте способ хранения полухода шахматной партии с минимально возможными затратами памяти.

Для хранения полухода шахматной партии с минимальными затратами памяти в C++ можно использовать 16-битное целое число (uint16_t).
Представим полуход в виде:

    *если ход пешкой с превращением, то указывается не тип пешки, а тип, которым пешка
    станет после превращения. Понимаем, что происходит превращение, посмотрев на последний бит.

*1. Тип фигуры: 3 бита (0 — пешка, 1 — конь, 2 — слон, 3 — ладья, 4 — ферзь, 5 — король) + (6 — длинная рокировка, 7 — короткая рокировка).
2. Позиция фигуры до хода: 6 бит (от 0 до 63).
3. Позиция фигуры после хода: 6 бит (от 0 до 63).
4. Флаги: 1 бит (0 — обычный ход, 1 — превращение).

2 вариант:
Всего возможных ходов в одной позиции, учитывая стандартные (П-16, Ф-27, Л-14, С-13, К-8, Кр-8) и не стандартные (2 рокировки, 8 взятий на проходе)
не превышает 256 (мог что-то упустить, но оно точно не перевесит), что можно хранить в 8-битном целом числе uint8_t.
Поэтому перед каждым ходом генерируем список всех допустимых ходов для текущей позиции, нумеруем их и храним номер хода в списке допустимых ходов.

