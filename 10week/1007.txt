RSHash: 0 2 8 19 27 44 58 86 105 130 148 169 199 229 267 307 334 391 432 500 
JSHash: 1 2 6 14 26 42 55 76 95 120 144 180 209 244 276 312 355 392 445 498 
PJWHash: 18 90 203 361 593 879 1215 1598 2044 2536 3050 3644 4247 4917 5606 6330 7177 8027 8952 9860 
ELFHash: 18 90 203 361 593 879 1215 1598 2044 2536 3050 3644 4247 4917 5606 6330 7177 8027 8952 9860 
BKDRHash: 1 4 14 25 39 51 68 84 103 131 152 167 204 234 266 299 337 379 426 473 
SDBMHash: 0 3 13 26 36 49 64 84 108 130 155 179 215 255 294 329 371 412 458 505
DJBHash: 2 4 13 30 37 53 69 83 101 122 146 172 196 224 252 292 336 371 419 450
DEKHash: 3 11 18 25 47 70 99 130 168 202 252 290 343 398 452 516 586 662 730 806
APHash: 1 3 8 15 28 43 54 69 84 107 124 150 191 228 271 307 345 389 432 472



PJWHash и ELFHash показывают наихудшие результаты (9860 коллизий при 2M строк), ELFHash наследует PJWHash,
создают слишком много коллизий для строковых ключей.

RSHash, SDBMHash и DJBHash демонстрируют наименьшее количество коллизий (~500 при 2M строк).

PJWHash и ELFHash дают абсолютно идентичные результаты.

Коллизии у всех функций растут квадратично.